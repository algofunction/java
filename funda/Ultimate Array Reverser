/**
Instructions

Task:
Given an array of strings, reverse them and their order in such way that their length stays the same as the length of the original inputs.

Example:
Input:  {"I", "like", "big", "butts", "and", "I", "cannot", "lie!"}
Output: {"!", "eilt", "onn", "acIdn", "ast", "t", "ubgibe", "kilI"}
**/


/**
Sample Tests

import org.junit.Test;
import static org.junit.Assert.assertEquals;
public class ExampleTest
{
  @Test public void FixedTest1()
  {
    assertEquals(new String[]{"!", "eilt", "onn", "acIdn", "ast", "t", "ubgibe", "kilI"},
    ArrayReverser.reverse(new String[]{"I", "like", "big", "butts", "and", "I", "cannot", "lie!"}));
  }
  @Test public void FixedTest2()
  {
    assertEquals(new String[]
    {"How", "many", "shrimp", "do", "you", "have", "to", "eat",
    "before", "your", "skin", "starts", "to", "turn", "pink?"},
    ArrayReverser.reverse(new String[]{"?kn", "ipnr", "utotst", "ra", "tsn", "iksr", "uo", "yer", "ofebta", "eote", "vahu", "oyodpm", "ir", "hsyn", "amwoH"}));
  }
}
**/


// Solution
public class ArrayReverser {

   public static String[] reverse(String[] a) {
     String s = new StringBuilder(String.join("",a)).reverse().toString();
     String[] b = new String[a.length];
     int i = 0, x = 0;
     for (String ss: a) b[x++] = s.substring(i,i+=ss.length());
     return b;
   }
}
