/**
Instructions

Christmas is coming, and Santa has a long list to go through, 
to find who deserves presents for the big day. Go through a list of children, 
and return a list containing every child who appeared on Santa's list. Do not add any child more than once. Output should be sorted.

For java, use Lists.

Comparison should be case sensitive and the returned list should contain only one copy of each name: 
"Sam" and "sam" are different, but "sAm" and "sAm" are not.
**/

/**
Sample Tests

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.runners.JUnit4;
import java.util.List;
import java.util.ArrayList;

public class TestFixure {
    @Test
    public void basicTest() {
        ArrayList<String> santasList = new ArrayList<String>();
        ArrayList<String> children = new ArrayList<String>();
        for(String s : new String[] {"Jason", "Jackson", "Jordan", "Johnny"})
        santasList.add(s);
        for(String s : new String[] {"Jason", "Jordan", "Jennifer"})
        children.add(s);
        ArrayList<String> goodChildren = new ArrayList<String>();
        
        for(String s : new String[] {"Jason", "Jordan"}) {
            goodChildren.add(s);
        }
        assertEquals(goodChildren, FindList.findChildren(santasList, children));
    }
    
    @Test
    public void sortingTest() {
        ArrayList<String> santasList = new ArrayList<String>();
        ArrayList<String> children = new ArrayList<String>();
        for(String s : new String[] {"Jason", "Jackson", "Johnson", "JJ"})
        santasList.add(s);
        for(String s : new String[] {"Jason", "James", "JJ"})
        children.add(s);
        ArrayList<String> goodChildren = new ArrayList<String>();
        
        for(String s : new String[] {"JJ", "Jason"}) {
            goodChildren.add(s);
        }
        assertEquals(goodChildren, FindList.findChildren(santasList, children));
    }
    
    @Test
    public void capitalizationTest() {
        ArrayList<String> santasList = new ArrayList<String>();
        ArrayList<String> children = new ArrayList<String>();
        for(String s : new String[] {"jASon", "JAsoN", "JaSON", "jasON"})
        santasList.add(s);
        for(String s : new String[] {"JasoN", "jASOn", "JAsoN", "jASon", "JASON"})
        children.add(s);
        ArrayList<String> goodChildren = new ArrayList<String>();
        
        for(String s : new String[] {"JAsoN", "jASon"}) {
            goodChildren.add(s);
        }
        assertEquals(goodChildren, FindList.findChildren(santasList, children));
    }
}**/


// Solution
import java.util.*;
import java.util.stream.Collectors;

class findList {

    public static List<String> findChildren(List<String> santasList, List<String> children) {
        
        final Set<String> santa = new HashSet<String>(santasList);
        return children.stream().filter( s -> santa.contains(s) ).distinct().sorted().collect(Collectors.toList());
    }
}
